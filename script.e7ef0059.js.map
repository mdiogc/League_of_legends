{"version":3,"sources":["src/js/legends.js","src/js/script.js"],"names":["Legend","exports","default","_createClass","data","_classCallCheck","name","image","full","title","tags","attack","info","defense","magic","difficulty","_legends","_interopRequireDefault","require","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","legends","button","document","querySelector","loadingDataText","getElementById","getLegend","_getLegend","_callee2","response","legend","_callee2$","_context2","fetch","json","style","visibility","addEventListener","_callee","_callee$","_context","showLegend","legendsContainer","innerHTML","card","createElement","className","innerText","img","src","alt","infoContainer","concat","join","display","appendChild"],"mappings":";AAYK,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,UAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,UAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAZL,IACqBA,EAAMC,QAAAC,QAAAC,EAEvB,SAAAH,EAAYI,GAAMC,EAAAL,KAAAA,GACd,KAAKM,KAAOF,EAAKE,KACjB,KAAKC,MAAQ,gEAAkEH,EAAKG,MAAMC,KAC1F,KAAKC,MAAQL,EAAKK,MAClB,KAAKC,KAAON,EAAKM,KACjB,KAAKC,OAASP,EAAKQ,KAAKD,OACxB,KAAKE,QAAUT,EAAKQ,KAAKC,QACzB,KAAKC,MAAQV,EAAKQ,KAAKE,MACvB,KAAKC,WAAaX,EAAKQ,KAAKG;;;ACqFnC,IAAA,EAhGDC,EAAAC,EAAAC,QAAA,iBAAkC,SAAAD,EAAAE,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAjB,CAAAA,QAAAiB,GAAA,SAAAE,EAAAC,GAAAD,OAAAA,EAAAE,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAF,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAC,mBAAAA,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAG,UAAAJ,gBAAAA,IAAAA,GAAA,SAAAK,IAClC,aAAAA,EAAAA,WAAAR,OAAAA,GAAAS,IAAAA,EAAAT,EAAAU,GAAAA,EAAAC,OAAAJ,UAAAK,EAAAF,EAAAG,eAAAV,EAAAQ,OAAAG,gBAAAL,SAAAA,EAAAT,EAAAU,GAAAD,EAAAT,GAAAU,EAAAK,OAAAC,EAAAZ,mBAAAA,OAAAA,OAAAa,GAAAA,EAAAD,EAAAX,UAAAa,aAAAA,EAAAF,EAAAG,eAAAC,kBAAAA,EAAAJ,EAAAK,aAAAC,gBAAAA,SAAAA,EAAAb,EAAAT,EAAAU,GAAAC,OAAAA,OAAAG,eAAAL,EAAAT,EAAAe,CAAAA,MAAAL,EAAAa,YAAAC,EAAAA,cAAAC,EAAAA,UAAAhB,IAAAA,EAAAT,GAAAsB,IAAAA,EAAAb,GAAAA,IAAAA,MAAAA,GAAAa,EAAAA,SAAAb,EAAAT,EAAAU,GAAAD,OAAAA,EAAAT,GAAAU,GAAAgB,SAAAA,EAAAjB,EAAAT,EAAAU,EAAAE,GAAAI,IAAAA,EAAAhB,GAAAA,EAAAO,qBAAAoB,EAAA3B,EAAA2B,EAAAV,EAAAN,OAAAiB,OAAAZ,EAAAT,WAAAW,EAAAW,IAAAA,EAAAjB,GAAAT,IAAAA,OAAAA,EAAAc,EAAAF,UAAAA,CAAAA,MAAAe,EAAArB,EAAAC,EAAAQ,KAAAD,EAAAc,SAAAA,EAAAtB,EAAAT,EAAAU,GAAAsB,IAAAA,MAAAA,CAAAA,KAAAC,SAAAA,IAAAxB,EAAAyB,KAAAlC,EAAAU,IAAAD,MAAAA,GAAAuB,MAAAA,CAAAA,KAAAC,QAAAA,IAAAxB,IAAAT,EAAA0B,KAAAA,EAAAS,IAAAA,EAAAC,iBAAAA,EAAAC,iBAAAA,EAAAC,YAAAA,EAAAC,YAAAA,EAAAZ,GAAAA,SAAAA,KAAAa,SAAAA,KAAAC,SAAAA,KAAAC,IAAAA,EAAApB,GAAAA,EAAAoB,EAAAzB,EAAA0B,WAAAA,OAAAA,OAAAA,IAAAA,EAAAhC,OAAAiC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAAD,MAAAA,GAAAA,IAAAnC,GAAAE,EAAAsB,KAAAW,EAAA5B,KAAAyB,EAAAG,GAAAE,IAAAA,EAAAN,EAAAlC,UAAAoB,EAAApB,UAAAI,OAAAiB,OAAAc,GAAAM,SAAAA,EAAAvC,GAAAwC,CAAAA,OAAAA,QAAAA,UAAAA,QAAAjD,SAAAA,GAAAsB,EAAAb,EAAAT,EAAAS,SAAAA,GAAAyC,OAAAA,KAAAA,QAAAlD,EAAAS,OAAA0C,SAAAA,EAAA1C,EAAAT,GAAAoD,SAAAA,EAAA1C,EAAAP,EAAAa,EAAAC,GAAAC,IAAAA,EAAAa,EAAAtB,EAAAC,GAAAD,EAAAN,GAAAe,GAAAA,UAAAA,EAAAc,KAAAZ,CAAAA,IAAAA,EAAAF,EAAAe,IAAAE,EAAAf,EAAAL,MAAAoB,OAAAA,GAAAjC,UAAAA,EAAAiC,IAAAvB,EAAAsB,KAAAC,EAAAnC,WAAAA,EAAAqD,QAAAlB,EAAAmB,SAAAC,KAAA9C,SAAAA,GAAA2C,EAAA3C,OAAAA,EAAAO,EAAAC,IAAAR,SAAAA,GAAA2C,EAAA3C,QAAAA,EAAAO,EAAAC,KAAAjB,EAAAqD,QAAAlB,GAAAoB,KAAA9C,SAAAA,GAAAW,EAAAL,MAAAN,EAAAO,EAAAI,IAAAX,SAAAA,GAAA2C,OAAAA,EAAA3C,QAAAA,EAAAO,EAAAC,KAAAA,EAAAC,EAAAe,KAAAvB,IAAAA,EAAAP,EAAAY,KAAAA,UAAAA,CAAAA,MAAAA,SAAAN,EAAAG,GAAA4C,SAAAA,IAAAxD,OAAAA,IAAAA,EAAAA,SAAAA,EAAAU,GAAA0C,EAAA3C,EAAAG,EAAAZ,EAAAU,KAAAA,OAAAA,EAAAA,EAAAA,EAAA6C,KAAAC,EAAAA,GAAAA,OAAA1B,SAAAA,EAAA9B,EAAAU,EAAAE,GAAAT,IAAAA,EAAAgC,EAAAnB,OAAAA,SAAAA,EAAAC,GAAAd,GAAAA,IAAAkC,EAAAoB,MAAAA,MAAAtD,gCAAAA,GAAAA,IAAAmC,EAAAtB,CAAAA,GAAAA,UAAAA,EAAAC,MAAAA,EAAAF,MAAAA,CAAAA,MAAAN,EAAAiD,MAAA9C,GAAAA,IAAAA,EAAA+C,OAAA3C,EAAAJ,EAAAqB,IAAAhB,IAAAC,CAAAA,IAAAA,EAAAN,EAAAgD,SAAA1C,GAAAA,EAAAE,CAAAA,IAAAA,EAAAyC,EAAA3C,EAAAN,GAAAQ,GAAAA,EAAAA,CAAAA,GAAAA,IAAAmB,EAAAnB,SAAAA,OAAAA,GAAAR,GAAAA,SAAAA,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAArB,GAAAA,UAAAA,EAAA+C,OAAAxD,CAAAA,GAAAA,IAAAgC,EAAAhC,MAAAA,EAAAmC,EAAA1B,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,SAAArB,WAAAA,EAAA+C,QAAA/C,EAAAqD,OAAArD,SAAAA,EAAAqB,KAAA9B,EAAAkC,EAAAK,IAAAA,EAAAX,EAAA/B,EAAAU,EAAAE,GAAA8B,GAAAA,WAAAA,EAAAV,KAAA7B,CAAAA,GAAAA,EAAAS,EAAA8C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAAxB,SAAAA,MAAAA,CAAAA,MAAA2B,EAAAT,IAAAyB,KAAA9C,EAAA8C,MAAAhB,UAAAA,EAAAV,OAAA7B,EAAAmC,EAAA1B,EAAA+C,OAAA/C,QAAAA,EAAAqB,IAAAS,EAAAT,OAAA4B,SAAAA,EAAA7D,EAAAU,GAAAE,IAAAA,EAAAF,EAAAiD,OAAAxD,EAAAH,EAAAK,SAAAO,GAAAT,GAAAA,IAAAM,EAAAC,OAAAA,EAAAkD,SAAAhD,KAAAA,UAAAA,GAAAZ,EAAAK,SAAA6D,SAAAxD,EAAAiD,OAAAjD,SAAAA,EAAAuB,IAAAxB,EAAAoD,EAAA7D,EAAAU,GAAAA,UAAAA,EAAAiD,SAAA/C,WAAAA,IAAAF,EAAAiD,OAAAjD,QAAAA,EAAAuB,IAAAkC,IAAAA,UAAAvD,oCAAAA,EAAA2B,aAAAA,EAAAvB,IAAAA,EAAAe,EAAA5B,EAAAH,EAAAK,SAAAK,EAAAuB,KAAAjB,GAAAA,UAAAA,EAAAgB,KAAAtB,OAAAA,EAAAiD,OAAAjD,QAAAA,EAAAuB,IAAAjB,EAAAiB,IAAAvB,EAAAkD,SAAArB,KAAAA,EAAAtB,IAAAA,EAAAD,EAAAiB,IAAAhB,OAAAA,EAAAA,EAAAyC,MAAAhD,EAAAV,EAAAoE,YAAAnD,EAAAF,MAAAL,EAAA2D,KAAArE,EAAAsE,QAAA5D,WAAAA,EAAAiD,SAAAjD,EAAAiD,OAAAjD,OAAAA,EAAAuB,IAAAxB,GAAAC,EAAAkD,SAAArB,KAAAA,GAAAtB,GAAAP,EAAAiD,OAAAjD,QAAAA,EAAAuB,IAAAkC,IAAAA,UAAAzD,oCAAAA,EAAAkD,SAAArB,KAAAA,GAAAgC,SAAAA,EAAA9D,GAAAT,IAAAA,EAAAwE,CAAAA,OAAA/D,EAAAA,IAAAA,KAAAA,IAAAT,EAAAyE,SAAAhE,EAAAA,IAAAA,KAAAA,IAAAT,EAAA0E,WAAAjE,EAAAT,GAAAA,EAAA2E,SAAAlE,EAAAmE,IAAAA,KAAAA,WAAAC,KAAA7E,GAAA8E,SAAAA,EAAArE,GAAAT,IAAAA,EAAAS,EAAAsE,YAAA/E,GAAAA,EAAAgC,KAAAhC,gBAAAA,EAAAiC,IAAAxB,EAAAsE,WAAA/E,EAAA6B,SAAAA,EAAApB,GAAAmE,KAAAA,WAAAJ,CAAAA,CAAAA,OAAA/D,SAAAA,EAAAwC,QAAAsB,EAAAS,MAAAA,KAAAA,OAAAlC,GAAAA,SAAAA,EAAA9C,GAAAA,GAAAA,GAAAA,KAAAA,EAAAU,CAAAA,IAAAA,EAAAV,EAAAiB,GAAAP,GAAAA,EAAAA,OAAAA,EAAAwB,KAAAlC,GAAAA,GAAAA,mBAAAA,EAAAqE,KAAArE,OAAAA,EAAAiF,IAAAA,MAAAjF,EAAAkF,QAAA/E,CAAAA,IAAAA,GAAAa,EAAAA,EAAAqD,SAAAA,IAAAlE,OAAAA,EAAAH,EAAAkF,QAAAtE,GAAAA,EAAAsB,KAAAlC,EAAAG,GAAAkE,OAAAA,EAAAtD,MAAAf,EAAAG,GAAAkE,EAAAX,MAAAW,EAAAA,EAAAA,OAAAA,EAAAtD,MAAAN,EAAA4D,EAAAX,MAAAW,EAAAA,GAAArD,OAAAA,EAAAqD,KAAArD,GAAAmD,MAAAA,IAAAA,UAAAjE,EAAAF,GAAAwC,oBAAAA,OAAAA,EAAAjC,UAAAkC,EAAAtC,EAAA4C,EAAAhC,cAAAA,CAAAA,MAAA0B,EAAAjB,cAAArB,IAAAA,EAAAsC,EAAA1B,cAAAA,CAAAA,MAAAyB,EAAAhB,cAAAgB,IAAAA,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAApB,qBAAAA,EAAAoF,oBAAA3E,SAAAA,GAAAT,IAAAA,EAAAS,mBAAAA,GAAAA,EAAAH,YAAAN,QAAAA,IAAAA,IAAAwC,GAAAxC,uBAAAA,EAAAmF,aAAAnF,EAAAb,QAAAa,EAAAqF,KAAA5E,SAAAA,GAAAE,OAAAA,OAAA2E,eAAA3E,OAAA2E,eAAA7E,EAAAgC,IAAAhC,EAAA8E,UAAA9C,EAAAnB,EAAAb,EAAAW,EAAAX,sBAAAA,EAAAF,UAAAI,OAAAiB,OAAAmB,GAAAtC,GAAAT,EAAAwF,MAAA/E,SAAAA,GAAA6C,MAAAA,CAAAA,QAAA7C,IAAAuC,EAAAG,EAAA5C,WAAAe,EAAA6B,EAAA5C,UAAAW,EAAAlB,WAAAA,OAAAA,OAAAA,EAAAmD,cAAAA,EAAAnD,EAAAyF,MAAAhF,SAAAA,EAAAC,EAAAE,EAAAT,EAAAa,QAAAA,IAAAA,IAAAA,EAAA0E,SAAAzE,IAAAA,EAAAkC,IAAAA,EAAAzB,EAAAjB,EAAAC,EAAAE,EAAAT,GAAAa,GAAAhB,OAAAA,EAAAoF,oBAAA1E,GAAAO,EAAAA,EAAAoD,OAAAd,KAAA9C,SAAAA,GAAAA,OAAAA,EAAAiD,KAAAjD,EAAAM,MAAAE,EAAAoD,UAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAAE,aAAAA,EAAAyB,EAAA9B,EAAAK,WAAAA,OAAAA,OAAAA,EAAAyB,EAAA/C,WAAAA,WAAAA,MAAAA,uBAAAA,EAAA2F,KAAAlF,SAAAA,GAAAT,IAAAA,EAAAW,OAAAF,GAAAC,EAAAE,GAAAA,IAAAA,IAAAA,KAAAZ,EAAAU,EAAAmE,KAAAjE,GAAAF,OAAAA,EAAAkF,UAAAvB,SAAAA,IAAA3D,KAAAA,EAAAwE,QAAAzE,CAAAA,IAAAA,EAAAC,EAAAmF,MAAApF,GAAAA,KAAAT,EAAAqE,OAAAA,EAAAtD,MAAAN,EAAA4D,EAAAX,MAAAW,EAAAA,EAAAA,OAAAA,EAAAX,MAAAW,EAAAA,IAAArE,EAAA8C,OAAAA,EAAAjB,EAAAtB,UAAAD,CAAAA,YAAAuB,EAAAmD,MAAAA,SAAAhF,GAAA8F,GAAAA,KAAAA,KAAAzB,EAAAA,KAAAA,KAAAP,EAAAA,KAAAA,KAAAC,KAAAA,MAAAtD,EAAAiD,KAAAA,MAAAE,EAAAA,KAAAA,SAAAD,KAAAA,KAAAA,OAAA1B,OAAAA,KAAAA,IAAAxB,EAAAmE,KAAAA,WAAA3B,QAAA6B,IAAA9E,EAAAU,IAAAA,IAAAA,KAAAA,KAAAA,MAAAA,EAAAqF,OAAAnF,IAAAA,EAAAsB,KAAAxB,KAAAA,KAAAuE,OAAAvE,EAAAsF,MAAAtF,MAAAA,KAAAA,GAAAD,IAAAwF,KAAAA,WAAAvC,KAAAA,MAAAjD,EAAAA,IAAAA,EAAAmE,KAAAA,WAAAG,GAAAA,WAAAtE,GAAAA,UAAAA,EAAAuB,KAAAvB,MAAAA,EAAAwB,IAAAiE,OAAAA,KAAAA,MAAAlC,kBAAAA,SAAAhE,GAAA0D,GAAAA,KAAAA,KAAA1D,MAAAA,EAAAU,IAAAA,EAAAyF,KAAAA,SAAAA,EAAAvF,EAAAT,GAAAc,OAAAA,EAAAe,KAAAf,QAAAA,EAAAgB,IAAAjC,EAAAU,EAAA2D,KAAAzD,EAAAT,IAAAO,EAAAiD,OAAAjD,OAAAA,EAAAuB,IAAAxB,KAAAN,EAAAA,IAAAA,IAAAA,EAAAyE,KAAAA,WAAAM,OAAA/E,EAAAA,GAAAA,IAAAA,EAAAa,CAAAA,IAAAA,EAAA4D,KAAAA,WAAAzE,GAAAc,EAAAD,EAAA+D,WAAA/D,GAAAA,SAAAA,EAAAwD,OAAA2B,OAAAA,EAAAnF,OAAAA,GAAAA,EAAAwD,QAAAsB,KAAAA,KAAA5E,CAAAA,IAAAA,EAAAN,EAAAsB,KAAAlB,EAAAI,YAAAA,EAAAR,EAAAsB,KAAAlB,EAAAE,cAAAA,GAAAA,GAAAE,EAAA0E,CAAAA,GAAAA,KAAAA,KAAA9E,EAAAyD,SAAA0B,OAAAA,EAAAnF,EAAAyD,UAAAqB,GAAAA,GAAAA,KAAAA,KAAA9E,EAAA0D,WAAAyB,OAAAA,EAAAnF,EAAA0D,iBAAAxD,GAAAA,GAAA4E,GAAAA,KAAAA,KAAA9E,EAAAyD,SAAA0B,OAAAA,EAAAnF,EAAAyD,UAAArD,OAAAA,CAAAA,IAAAA,EAAAqC,MAAAA,MAAAqC,0CAAAA,GAAAA,KAAAA,KAAA9E,EAAA0D,WAAAyB,OAAAA,EAAAnF,EAAA0D,gBAAAT,OAAAA,SAAAxD,EAAAT,GAAAU,IAAAA,IAAAA,EAAAkE,KAAAA,WAAAM,OAAAxE,EAAAA,GAAAA,IAAAA,EAAAP,CAAAA,IAAAA,EAAAyE,KAAAA,WAAAlE,GAAAP,GAAAA,EAAAqE,QAAAsB,KAAAA,MAAAlF,EAAAsB,KAAA/B,EAAA2F,eAAAA,KAAAA,KAAA3F,EAAAuE,WAAA1D,CAAAA,IAAAA,EAAAb,EAAAa,OAAAA,IAAAP,UAAAA,GAAAA,aAAAA,IAAAO,EAAAwD,QAAAxE,GAAAA,GAAAgB,EAAA0D,aAAA1D,EAAAC,MAAAA,IAAAA,EAAAD,EAAAA,EAAA+D,WAAA9D,GAAAA,OAAAA,EAAAe,KAAAvB,EAAAQ,EAAAgB,IAAAjC,EAAAgB,GAAA2C,KAAAA,OAAAU,OAAAA,KAAAA,KAAArD,EAAA0D,WAAAnC,GAAA6D,KAAAA,SAAAnF,IAAAmF,SAAAA,SAAA3F,EAAAT,GAAAS,GAAAA,UAAAA,EAAAuB,KAAAvB,MAAAA,EAAAwB,IAAAxB,MAAAA,UAAAA,EAAAuB,MAAAvB,aAAAA,EAAAuB,KAAAqC,KAAAA,KAAA5D,EAAAwB,IAAAxB,WAAAA,EAAAuB,MAAAkE,KAAAA,KAAAjE,KAAAA,IAAAxB,EAAAwB,IAAA0B,KAAAA,OAAAU,SAAAA,KAAAA,KAAA5D,OAAAA,WAAAA,EAAAuB,MAAAhC,IAAAqE,KAAAA,KAAArE,GAAAuC,GAAA8D,OAAAA,SAAA5F,GAAAT,IAAAA,IAAAA,EAAA4E,KAAAA,WAAAM,OAAAlF,EAAAA,GAAAA,IAAAA,EAAAU,CAAAA,IAAAA,EAAAkE,KAAAA,WAAA5E,GAAAU,GAAAA,EAAAgE,aAAAjE,EAAA2F,OAAAA,KAAAA,SAAA1F,EAAAqE,WAAArE,EAAAiE,UAAAG,EAAApE,GAAA6B,IAAA+D,MAAAC,SAAA9F,GAAAT,IAAAA,IAAAA,EAAA4E,KAAAA,WAAAM,OAAAlF,EAAAA,GAAAA,IAAAA,EAAAU,CAAAA,IAAAA,EAAAkE,KAAAA,WAAA5E,GAAAU,GAAAA,EAAA8D,SAAA/D,EAAAG,CAAAA,IAAAA,EAAAF,EAAAqE,WAAAnE,GAAAA,UAAAA,EAAAoB,KAAA7B,CAAAA,IAAAA,EAAAS,EAAAqB,IAAA6C,EAAApE,GAAAP,OAAAA,GAAAsD,MAAAA,MAAA+C,0BAAAA,cAAAA,SAAAxG,EAAAU,EAAAE,GAAAgD,OAAAA,KAAAA,SAAAvD,CAAAA,SAAAyC,EAAA9C,GAAAoE,WAAA1D,EAAA4D,QAAA1D,GAAA+C,SAAAA,KAAAA,SAAA1B,KAAAA,IAAAxB,GAAA8B,IAAAvC,EAAA,SAAAyG,EAAA7F,EAAAH,EAAAT,EAAAU,EAAAP,EAAAc,EAAAC,GAAAF,IAAAA,IAAAA,EAAAJ,EAAAK,GAAAC,GAAAE,EAAAJ,EAAAD,MAAAH,MAAAA,GAAAZ,YAAAA,EAAAY,GAAAI,EAAA0C,KAAAjD,EAAAW,GAAAsE,QAAArC,QAAAjC,GAAAmC,KAAA7C,EAAAP,GAAA,SAAAuG,EAAA9F,GAAAH,OAAAA,WAAAA,IAAAA,EAAAT,KAAAA,EAAA2G,UAAAjB,OAAAA,IAAAA,QAAAhF,SAAAA,EAAAP,GAAAc,IAAAA,EAAAL,EAAAgG,MAAAnG,EAAAT,GAAA6G,SAAAA,EAAAjG,GAAA6F,EAAAxF,EAAAP,EAAAP,EAAA0G,EAAAC,EAAAlG,OAAAA,GAAAkG,SAAAA,EAAAlG,GAAA6F,EAAAxF,EAAAP,EAAAP,EAAA0G,EAAAC,EAAAlG,QAAAA,GAAAiG,OAAA,MACA,IAAIE,EAAU,GAERC,EAASC,SAASC,cAAc,UAChCC,EAAkBF,SAASG,eAAe,qBAsBhD,SACeC,IAAS,OAAAC,EAAAV,MAAAD,KAAAA,WAexB,SAAAW,IAFC,OAEDA,EAAAZ,EAAAlG,IAAA6E,KAfA,SAAAkC,IAAA,IAAAC,EAAAvI,EAAAwI,EAAA,OAAAjH,IAAAkB,KAAAgG,SAAAC,GAAA,OAAAA,OAAAA,EAAA7B,KAAA6B,EAAAtD,MAAA,KAAA,EAC4F,MAA5E,2EAA4EsD,EAAAtD,KAAA,EACjEuD,MADX,4EACqB,KAAA,EAAnB,OAARJ,EAAQG,EAAA7D,KAAA6D,EAAAtD,KAAA,EACMmD,EAASK,OAAM,KAAA,EAGnC,IAASJ,KAHHxI,EAAI0I,EAAA7D,KAA2B7E,KAKjC8H,EAAQlC,KAAK,IAAIhG,EAAM,QAACI,EAAKwI,KAIjCN,EAAgBW,MAAMC,WAAa,SAAS,KAAA,EAAA,IAAA,MAAA,OAAAJ,EAAA1B,SAAAsB,OAC/CX,MAAAD,KAAAA,WAlCDQ,EAAgBW,MAAMC,WAAa,SAGnCf,EAAOgB,iBAAiB,QAAOtB,EAAAlG,IAAA6E,KAAE,SAAA4C,IAAA,OAAAzH,IAAAkB,KAAAwG,SAAAC,GAAA,OAAAA,OAAAA,EAAArC,KAAAqC,EAAA9D,MAAA,KAAA,EAU7B,OARA2C,EAAOc,MAAMC,WAAa,SAG1Bd,SAASC,cAAc,QAAQY,MAAMC,WAAa,UAGlDZ,EAAgBW,MAAMC,WAAa,UAEnCI,EAAA9D,KAAA,EACMgD,IAAW,KAAA,EAGjBe,IAAa,KAAA,EAAA,IAAA,MAAA,OAAAD,EAAAlC,SAAAgC,OAoBjB,IAAMG,EAAa,WACf,IAAMC,EAAmBpB,SAASG,eAAe,OACjDiB,EAAiBC,UAAY,GAE7BvB,EAAQ9D,QAAQ,SAAAwE,GACZ,IAAMc,EAAOtB,SAASuB,cAAc,OACpCD,EAAKE,UAAY,OAEjB,IAAMtJ,EAAO8H,SAASuB,cAAc,OACpCrJ,EAAKsJ,UAAY,OACjBtJ,EAAKuJ,UAAYjB,EAAOtI,KAExB,IAAMwJ,EAAM1B,SAASuB,cAAc,OACnCG,EAAIC,IAAMnB,EAAOrI,MACjBuJ,EAAIE,IAAMpB,EAAOtI,KAEjB,IAAMG,EAAQ2H,SAASuB,cAAc,OACrClJ,EAAMmJ,UAAY,QAClBnJ,EAAMoJ,UAAYjB,EAAOnI,MAGzB,IAAMwJ,EAAgB7B,SAASuB,cAAc,OAC7CM,EAAcL,UAAY,iBAC1BK,EAAcR,UAASS,yCAAAA,OACOtB,EAAOlI,MAAQkI,EAAOlI,KAAK2F,OAAS,EAAIuC,EAAOlI,KAAKyJ,KAAK,OAAS,oBAAmBD,qEAAAA,OAEjGtB,EAAOjI,OAAMuJ,eAAAA,OAActB,EAAO/H,QAAOqJ,aAAAA,OAAYtB,EAAO9H,MAAKoJ,kBAAAA,OAAiBtB,EAAO7H,WAE1G,kCAGDkJ,EAAchB,MAAMmB,QAAU,OAG9BV,EAAKP,iBAAiB,YAAa,WAC/Bc,EAAchB,MAAMmB,QAAU,UAIlCV,EAAKP,iBAAiB,WAAY,WAC9Bc,EAAchB,MAAMmB,QAAU,SAIlCV,EAAKW,YAAY/J,GACjBoJ,EAAKW,YAAYP,GACjBJ,EAAKW,YAAY5J,GACjBiJ,EAAKW,YAAYJ,GAGjBT,EAAiBa,YAAYX","file":"script.e7ef0059.js","sourceRoot":"..","sourcesContent":["// We export the Legends class by default\nexport default class Legend {\n    // Constructor that receives data as a parameter that contains the data of the legends that we obtain from the API\n    constructor(data) {\n        this.name = data.name;\n        this.image = \"https://ddragon.leagueoflegends.com/cdn/13.18.1/img/champion/\" + data.image.full;\n        this.title = data.title;\n        this.tags = data.tags;\n        this.attack = data.info.attack\n        this.defense = data.info.defense\n        this.magic = data.info.magic\n        this.difficulty = data.info.difficulty\n    }\n  }","import Legend from \"./legends.js\"; // Import the Legend class from the legends.js file\n\nlet legends = []; // Array where instances of champions (legends) will be stored\n\nconst button = document.querySelector(\"button\"); // Select the button in the DOM\nconst loadingDataText = document.getElementById('loading-data-text'); // Element to show \"Loading data...\"\n\nloadingDataText.style.visibility = 'hidden'; // Initially hide the loading message\n\n// Add an event listener to the button to wait for the click\nbutton.addEventListener(\"click\", async () => {\n    // On click, hide the button by changing its visibility\n    button.style.visibility = 'hidden'; // Used 'button' directly instead of querying '#button' again\n\n    // Change the visibility of the element with id 'lol' to show it\n    document.querySelector('#lol').style.visibility = 'visible';\n\n    // Show the \"Loading data...\" message before the fetch\n    loadingDataText.style.visibility = 'visible';\n\n    // Call the getLegend() function, which will begin the process of showing the champions\n    await getLegend(); // Wait for getLegend to finish\n\n    // Once the data is fetched, call showLegend to display the champions\n    showLegend();\n});\n\n// Async function to fetch champions from the API\nasync function getLegend() {\n    const url = \"https://ddragon.leagueoflegends.com/cdn/13.18.1/data/es_ES/champion.json\"; // API URL with champion data\n    const response = await fetch(url); // Send a request to the API\n    const data = (await response.json()).data; // Parse the response to JSON and access the \"data\" property that contains the champions\n    \n    // Loop through each champion (legend) in the data obtained from the API\n    for (let legend in data) {\n        // Create a new instance of the Legend class for each champion and add it to the legends array\n        legends.push(new Legend(data[legend]));\n    }\n\n    // Hide the \"Loading data...\" message once the data is loaded\n    loadingDataText.style.visibility = 'hidden';\n}\n\n// This function is responsible for displaying the champions stored in the legends array in the DOM\nconst showLegend = () => {\n    const legendsContainer = document.getElementById(\"lol\");\n    legendsContainer.innerHTML = ''; // Clear previous content\n\n    legends.forEach(legend => {\n        const card = document.createElement('div');\n        card.className = 'card';\n\n        const name = document.createElement('div');\n        name.className = 'name';\n        name.innerText = legend.name;\n\n        const img = document.createElement('img');\n        img.src = legend.image;\n        img.alt = legend.name;\n\n        const title = document.createElement('div');\n        title.className = 'title';\n        title.innerText = legend.title;\n\n        // Create a container for additional info\n        const infoContainer = document.createElement('div');\n        infoContainer.className = 'info-container';\n        infoContainer.innerHTML = `\n            <div class=\"tags\">Tags: ${legend.tags && legend.tags.length > 0 ? legend.tags.join(' & ') : 'No tags available'}</div>\n            <div class=\"stats\">\n                Attack: ${legend.attack}, Defense: ${legend.defense}, Magic: ${legend.magic}, Difficulty: ${legend.difficulty}\n            </div>\n        `;\n        \n        // Hide the info container initially\n        infoContainer.style.display = 'none';\n\n        // Show the info container on mouseover\n        card.addEventListener('mouseover', () => {\n            infoContainer.style.display = 'block';\n        });\n\n        // Hide the info container on mouseout\n        card.addEventListener('mouseout', () => {\n            infoContainer.style.display = 'none';\n        });\n\n        // Append all elements to the card\n        card.appendChild(name);\n        card.appendChild(img);\n        card.appendChild(title);\n        card.appendChild(infoContainer);\n\n        // Append the card to the legends container\n        legendsContainer.appendChild(card);\n    });\n};\n\n"]}